<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.authcenter.dao.AccountSecretProfileDao">
    <resultMap id="BaseResultMap" type="com.example.authcenter.entity.AccountSecretProfile">
        <id column="uid" jdbcType="BIGINT" property="uid"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="id_card" jdbcType="VARCHAR" property="idCard"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        `uid`, `password`, id_card, salt, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from account_secret_profile
        where `uid` = #{uid,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from account_secret_profile
        where `uid` = #{uid,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="uid" keyProperty="uid"
            parameterType="com.example.authcenter.entity.AccountSecretProfile" useGeneratedKeys="true">
        insert into account_secret_profile (`password`, id_card, salt,
                                            create_time, update_time)
        values (#{password,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="uid" keyProperty="uid"
            parameterType="com.example.authcenter.entity.AccountSecretProfile" useGeneratedKeys="true">
        insert into account_secret_profile
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="password != null">
                `password`,
            </if>
            <if test="idCard != null">
                id_card,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="idCard != null">
                #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.authcenter.entity.AccountSecretProfile">
        update account_secret_profile
        <set>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="idCard != null">
                id_card = #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where `uid` = #{uid,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.authcenter.entity.AccountSecretProfile">
        update account_secret_profile
        set `password`  = #{password,jdbcType=VARCHAR},
            id_card     = #{idCard,jdbcType=VARCHAR},
            salt        = #{salt,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where `uid` = #{uid,jdbcType=BIGINT}
    </update>
</mapper>